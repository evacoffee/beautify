package com.evacoffee.beautymod.dating;

import net.minecraft.server.network.ServerPlayerEntity;
import net.minecraft.server.world.ServerWorld;
import net.minecraft.util.math.BlockPos;

import java.util.*;

public class DateLocationManager {
    private static final Map<String, DateLocation> locations = new HashMap<>();
    private static final Map<String, Set<String>> playerLocations = new HashMap<>();

    public static boolean registerLocation(ServerPlayerEntity player, String name, DateType type, BlockPos pos) {
        String locationId = player.getUuidAsString() + ":" + name.toLowerCase();
        if (locations.containsKey(locationId)) {
            return false;
        }

        DateLocation location = new DateLocation(
            name, type, pos, player.getWorld(),
            player.getUuidAsString()
        );

        locations.put(locationId, location);
        playerLocations
            .computeIfAbsent(player.getUuidAsString(), k -> new HashSet<>())
            .add(locationId);
        
        return true;
    }

    public static List<DateLocation> getPlayerLocations(ServerPlayerEntity player) {
        Set<String> playerLocIds = playerLocations.getOrDefault(player.getUuidAsString(), Collections.emptySet());
        List<DateLocation> result = new ArrayList<>();
        for (String id : playerLocIds) {
            DateLocation loc = locations.get(id);
            if (loc != null) result.add(loc);
        }
        return result;
    }

    public static DateLocation getLocation(ServerPlayerEntity player, String name) {
        String locationId = player.getUuidAsString() + ":" + name.toLowerCase();
        return locations.get(locationId);
    }

    // Save/load methods would go here for persistence
}